{"version":3,"sources":["Note.js","Board.js","serviceWorker.js","index.js"],"names":["Note","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","edit","bind","assertThisInitialized","remove","save","renderForm","renderDisplay","randomPlacement","style","right","window","innerWidth","top","innerHeight","transform","concat","x","y","s","Math","ceil","random","nextProps","nextState","children","textArea","_newText","focus","select","setState","onRemove","index","e","preventDefault","onChange","value","_this2","react_default","a","createElement","className","onSubmit","ref","input","defaultValue","id","fa","onClick","React","Component","Board","notes","add","allNotes","update","nextId","self","count","fetch","then","response","json","split","forEach","sentence","substring","newText","i","console","log","prevState","map","note","objectSpread","text","toConsumableArray","uniqueId","filter","src_Note","key","Boolean","location","hostname","match","ReactDOM","render","src_Board","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0dbd8094.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FaPencilAlt} from 'react-icons/fa';\r\nimport {FaTrash} from 'react-icons/fa';\r\nimport {FaSave} from 'react-icons/fa';\r\n\r\n\r\nclass Note extends React.Component {\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n      editing: false\r\n    }\r\n    this.edit = this.edit.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.save = this.save.bind(this);\r\n    this.renderForm = this.renderForm.bind(this);\r\n    this.renderDisplay = this.renderDisplay.bind(this);\r\n    this.randomPlacement = this.randomPlacement.bind(this);\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.style = {\r\n      right: this.randomPlacement(0, window.innerWidth - 150, 'px'),\r\n      top : this.randomPlacement(0, window.innerHeight - 150, 'px'),\r\n      transform: `rotate(${this.randomPlacement(-25, 25, 'deg')})`\r\n    }\r\n  }\r\n\r\n\r\n    randomPlacement(x, y, s) {\r\n      return x + Math.ceil(Math.random() * (y-x)) + s;\r\n    }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return(\r\n      this.props.children !== nextProps.children || this.state !== nextState\r\n    )\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var textArea;\r\n    if(this.state.editing){\r\n      textArea = this._newText;\r\n      textArea.focus();\r\n      textArea.select();\r\n    }\r\n  }\r\n\r\n\r\n  edit(){\r\n    this.setState({editing: true});\r\n  }\r\n\r\n  remove(){\r\n    this.props.onRemove(this.props.index);\r\n  }\r\n\r\n  save(e) {\r\n    e.preventDefault();\r\n    this.props.onChange(this._newText.value, this.props.index);\r\n    this.setState({\r\n      editing: false\r\n    })\r\n  }\r\n\r\n  renderForm(){\r\n    return(\r\n      <div className=\"note\" style={this.style}>\r\n        <form onSubmit={this.save}>\r\n          <textarea ref={input => this._newText = input} defaultValue={this.props.children}/>\r\n          <button id=\"save\"><FaSave /></button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderDisplay(){\r\n    return (\r\n      <div className=\"note\" style={this.style}>\r\n        <p>{this.props.children}</p>\r\n        <span>\r\n          <button onClick={this.edit} id=\"edit\"><FaPencilAlt /></button>\r\n          <button onClick={this.remove} id=\"remove\"><FaTrash /></button>\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n\r\n    return (this.state.editing ? this.renderForm() : this.renderDisplay());\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport Note from './Note';\r\nimport {FaPlus} from 'react-icons/fa';\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      notes: []\r\n    };\r\n    this.add = this.add.bind(this);\r\n    this.allNotes = this.allNotes.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.nextId = this.nextId.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    var self = this;\r\n    if(this.props.count){\r\n      fetch(`https://baconipsum.com/api/?type=all-meat&sentences=${this.props.count}`)\r\n        .then(response => response.json())\r\n        .then(json => json[0].split('. ').forEach(sentence => self.add(sentence.substring(0, 25))));\r\n    }\r\n  }\r\n\r\n\r\n  update(newText, i){\r\n    console.log(newText, \" at \", i);\r\n    this.setState(prevState => ({\r\n      notes: prevState.notes.map(\r\n        note => (note.id !== i) ? note : {...note, note: newText}\r\n      )\r\n    }) )\r\n  }\r\n\r\n  add(text) {\r\n    this.setState(prevState => ({\r\n      notes: [\r\n        ...prevState.notes,\r\n        {\r\n          id: this.nextId(),\r\n          note: text\r\n        }\r\n      ]\r\n\r\n    }) )\r\n  }\r\n\r\n  nextId(){\r\n    this.uniqueId = this.uniqueId || 0;\r\n    return this.uniqueId++;\r\n  }\r\n\r\n  remove(id) {\r\n    console.log(\"remove item at :\" ,id);\r\n    this.setState(prevState => ({\r\n      notes: prevState.notes.filter(note => note.id !== id)\r\n    }) )\r\n  }\r\n\r\n  allNotes(note, i){\r\n    return (\r\n      <Note key={note.id} index={note.id} onChange={this.update} onRemove={this.remove}>{note.note}</Note>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"board\">\r\n        {this.state.notes.map(this.allNotes)}\r\n        <button onClick={this.add.bind(null, \"New Note\")} id=\"add\">\r\n          <FaPlus />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Board;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './Board';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Board count={50}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}